<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher Panel</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            margin-top: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        tbody tr:hover {
            background-color: #f2f2f2;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <h1>Teacher Panel</h1>

    <button class="btn btn-primary" onclick="createTeacher()">Create Teacher</button>

    <table>
        <thead>
            <tr>
                <th>Full Name</th>
                <th>Username</th>
                <th>Email</th>
                <th>Password</th>
                <th>Birthdate</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="teachersTable">
            <!-- Data will be inserted here dynamically -->
        </tbody>
    </table>

    <!-- Your JavaScript code here -->
    <script>
        // Function to fetch teacher data from server and populate the table
        async function fetchTeachers() {
            try {
                const response = await fetch('/teachers');
                const teachers = await response.json();
                const tableBody = document.getElementById('teachersTable');

                // Clear previous data
                tableBody.innerHTML = '';

                // Populate table with fetched data
                teachers.forEach(teacher => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${teacher.fullname}</td>
                        <td>${teacher.username}</td>
                        <td>${teacher.email}</td>
                        <td>${teacher.password}</td>
                        <td>${new Date(teacher.birthdate).toLocaleDateString()}</td>
                        <td>
                            <button class="btn btn-primary" onclick="updateTeacher('${teacher.username}')">Update</button>
                            <button class="btn btn-primary" onclick="deleteTeacher('${teacher.username}')">Delete</button>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });
            } catch (error) {
                console.error(error);
                alert('Failed to fetch teachers');
            }
        }

        // Function to create a new teacher
        async function createTeacher() {
            const fullname = prompt('Enter full name:');
            const username = prompt('Enter username:');
            const email = prompt('Enter email:');
            const password = prompt('Enter password:');
            const birthdate = prompt('Enter birthdate (YYYY-MM-DD):');

            try {
                const response = await fetch('/teachers', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        fullname,
                        username,
                        email,
                        password,
                        birthdate
                    })
                });

                if (response.ok) {
                    alert('Teacher created successfully');
                    fetchTeachers(); // Refresh the table
                } else {
                    alert('Failed to create teacher');
                }
            } catch (error) {
                console.error(error);
                alert('Failed to create teacher');
            }
        }

        // Function to update a teacher
        async function updateTeacher(username) {
            try {
                const currentTeacher = await fetchTeacherByUsername(username); // Fetch current teacher data

                // Prompt user for each field
                const newFullname = prompt('Enter new full name (leave empty to keep old):');
                const newUsername = prompt('Enter new username (leave empty to keep old):');
                const newEmail = prompt('Enter new email (leave empty to keep old):');
                const newPassword = prompt('Enter new password (leave empty to keep old):');
                const newBirthdate = prompt('Enter new birthdate (YYYY-MM-DD, leave empty to keep old):');

                // Construct the updated teacher object
                const updatedTeacher = {
                    fullname: newFullname || currentTeacher.fullname, // If prompt is empty or canceled, use current value
                    username: newUsername || currentTeacher.username,
                    email: newEmail || currentTeacher.email,
                    password: newPassword || currentTeacher.password,
                    birthdate: newBirthdate ? new Date(newBirthdate) : currentTeacher.birthdate, // Parse new date or use current value
                };

                const response = await fetch(`/teachers/${username}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updatedTeacher)
                });

                if (response.ok) {
                    alert('Teacher updated successfully');
                    fetchTeachers(); // Refresh the table
                } else {
                    alert('Failed to update teacher');
                }
            } catch (error) {
                console.error(error);
                alert('Failed to update teacher');
            }
        }

        // Function to delete a teacher
        async function deleteTeacher(username) {
            const confirmDelete = confirm(`Are you sure you want to delete teacher with username ${username}?`);

            if (confirmDelete) {
                try {
                    const response = await fetch(`/teachers/${username}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Teacher deleted successfully');
                        fetchTeachers(); // Refresh the table
                    } else {
                        alert('Failed to delete teacher');
                    }
                } catch (error) {
                    console.error(error);
                    alert('Failed to delete teacher');
                }
            }
        }

        // Function to fetch a teacher by username
        async function fetchTeacherByUsername(username) {
            try {
                const response = await fetch(`/teachers/${username}`);
                if (!response.ok) {
                    throw new Error('Failed to fetch teacher');
                }
                return await response.json();
            } catch (error) {
                console.error(error);
                alert('Failed to fetch teacher');
            }
        }

        // Load data when the page is loaded
        window.onload = fetchTeachers;
    </script>
</body>
</html>
